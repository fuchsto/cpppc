---
format: Markdown
title: Session 10 (27. Jan 2016)
...

> C++ has indeed become too “expert friendly” at a time where the degree of
> effective formal education of the average software developer has declined.
> However, the solution is not to dumb down the programming languages but to
> use a variety of programming languages and educate more experts. There has
> to be languages for those experts to use – and C++ is one of those languages.
> \
> \
> -- Bjarne Stroustrup
> ([Interview: The Problem with Programming](https://www.technologyreview.com/s/406923/the-problem-with-programming/))


# Fundamental Formal Definitions Revisited


## Semantics

Originating from linguistics, semantics is the study of meaning.
Formal means to represent semantics is a necessity as intuitive
reasoning is obviously biased and may drastically differ between
individuals.

In the context of this course, and actually computer science in
general, formal semantics describe the effect of operations and their
interoperability and interdependency with respect to the scope of their
invocation.

We usually define semantics of an operation by specifiying:

- Preconditions
- Invariants
- Postconditions


## Concept

Similar the *Ideon* in Platon's terminology, a concept
(lat. *conceptum* - sth. perceived) is an abstract idea representing
fundamental characteristics.

To illustrate Platon's definition of an *abstract object*, let's assume
two strangers, maybe foreigners, talk about dogs.
The concrete visual rendition in the mental model of both will diverge.
But they there is no need to negotiate definitions to have a
conversation about dogs because the characteristics associated with the
general *concept* "dog" do not conflict.

Similarily, concepts are used in C++ to define an ontology of types.
Specifying algorithm variants for every single type is impossible but
the the unlimited set of types can be reduced to a small set of common
characteristics.

In the STL, a prominent concept is the *Iterator*.

The iterator concept (and its subcategories) serves as a minimal
abstraction to communicate access to data elements between algorithms
and containers.

# References

- [*What is Meaning? Fundamentals of Format Semantics*. Paul H. Portner](https://yanjianghk.files.wordpress.com/2014/09/paul-portner-what-is-meaning-fundamentals-of-formal-semantics-fundamentals-of-linguistics-2005.pdf)